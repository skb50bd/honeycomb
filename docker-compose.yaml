version: "3.8"

services:
  traefik:
    image: traefik:v2.10.7
    container_name: traefik
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--providers.file.filename=/etc/traefik/traefik-dynamic.yaml"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    networks:
      - edge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CERTS_DIR}/${BASE_DOMAIN}/:/certificates/
      - ${HTPASSWD_PATH}:/auth/htpasswd:ro
      - ./traefik/traefik-dynamic.yaml:/etc/traefik/traefik-dynamic.yaml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DASHBOARD_URL}`)"
      - "traefik.http.routers.dashboard.entrypoints=https"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_CREDENTIALS}"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.routers.dashboard.middlewares=redirect-to-https"
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  minio:
    image: minio/minio
    container_name: minio
    networks:
      - edge
    volumes:
      - ${MINIO_DATA_DIR}:/data/
    environment:
      - MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY
    command: server /data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`${MINIO_URL}`)"
      - "traefik.http.routers.minio.entrypoints=https"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio.middlewares=redirect-to-https"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  docker_registry:
    image: registry:2
    container_name: docker_registry
    networks:
      - edge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.docker_registry.rule=Host(`${DOCKER_REGISTRY_URL}`)"
      - "traefik.http.routers.docker_registry.entrypoints=https"
      - "traefik.http.routers.docker_registry.tls=true"
      - "traefik.http.routers.docker_registry.service=docker_registry"
      - "traefik.http.services.docker_registry.loadbalancer.server.port=443"
      - "traefik.http.routers.docker_registry.middlewares=redirect-to-https"
    environment:
      - REGISTRY_AUTH_HTPASSWD_PATH
      - REGISTRY_AUTH_HTPASSWD_REALM
      - REGISTRY_HTTP_ADDR=0.0.0.0:443
      - REGISTRY_HTTP_TLS_CERTIFICATE
      - REGISTRY_HTTP_TLS_KEY
      - REGISTRY_STORAGE
      - REGISTRY_STORAGE_S3_ACCESSKEY
      - REGISTRY_STORAGE_S3_SECRETKEY
      - REGISTRY_STORAGE_S3_BUCKET
      - REGISTRY_STORAGE_S3_REGION
      - REGISTRY_STORAGE_S3_REGIONENDPOINT=http://minio:9000
    volumes:
      - ${HTPASSWD_PATH}:/auth/htpasswd
      - ${CERTS_DIR}/${BASE_DOMAIN}/:/certificates/
    depends_on:
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/v2/_catalog"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    networks:
      - edge
    ports:
      - 9000:9000
      - 9443:9443
    volumes:
        - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_URL}`)"
      - "traefik.http.routers.portainer.entrypoints=https"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.middlewares=redirect-to-https"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:9000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  portainer_agent:
    image: portainer/agent
    container_name: portainer_agent
    ports:
      - 9001:9001
    networks:
      - edge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    deploy:
    depends_on:
      - portainer
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:9001"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  speedtest:
    image: openspeedtest/latest
    container_name: speedtest
    networks:
      - edge
    ports:
      - 3000:3000
      - 3001:3001
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.speedtest.rule=Host(`${SPEEDTEST_URL}`)"
      - "traefik.http.routers.speedtest.entrypoints=https"
      - "traefik.http.routers.speedtest.tls=true"
      - "traefik.http.routers.speedtest.service=speedtest"
      - "traefik.http.services.speedtest.loadbalancer.server.port=3000"
      - "traefik.http.routers.speedtest.middlewares=redirect-to-https"
    depends_on:
      - traefik
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    networks:
      - edge
    ports:
      - 8766:8766
    environment:
      - TZ
      - PUID=1000
      - PGID=1000
      - WEBUI_PORT=8766
    volumes:
      - ${QBITTORRENT_CONFIG_DIR}:/config
      - ${STORAGE_DIR}:/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`${QBITTORRENT_URL}`)"
      - "traefik.http.routers.qbittorrent.entrypoints=https"
      - "traefik.http.routers.qbittorrent.tls=true"
      - "traefik.http.routers.qbittorrent.service=qbittorrent"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8766"
      - "traefik.http.routers.qbittorrent.middlewares=redirect-to-https"
    depends_on:
      - traefik
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8766"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    networks:
      - edge
    ports:
      - 32400:32400
    environment:
      - PLEX_CLAIM
      - TZ
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - ${PLEX_CONFIG_DIR}:/config
      - ${PLEX_TRANSCODE_DIR}:/transcode
      - ${STORAGE_DIR}:/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`${PLEX_URL}`)"
      - "traefik.http.routers.plex.entrypoints=https"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.routers.plex.service=plex"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.routers.plex.middlewares=redirect-to-https"
    depends_on:
      - traefik
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:32400"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    networks:
      - edge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --interval 3600
    healthcheck:
      test: ["CMD-SHELL", "pgrep watchtower"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

networks:
  edge:

